--- FabLabKannai-GoogleAssistant-3.py	2018-02-24 00:59:02.059905228 +0900
+++ FabLabKannai-GoogleAssistant-4.py	2018-02-24 00:23:59.927950162 +0900
@@ -43,12 +43,72 @@
 PIN_BUTTON = 27
 BOUNCE_MSEC = 500
 
+endword = [
+        ['ありがとう', True],
+        ['またね', True],
+        ['また後で', True],
+        ['行ってきます', True],
+        ['もういい', True],
+        ['特にない',True],
+        ['じゃあまた', True],
+        ['じゃまた', True],
+        ['さようなら', True],
+        ['バイバイ', True],
+        ['終了', False],
+        ['ストップ', False],
+        ['オーケー', False],
+        ['OK', False],
+        ['おやすみ', True],
+        ['お休みなさい',True],
+        ['null', False]]
+continue_flag = True
+timeout_count = 0
+
 DEVICE_API_URL = 'https://embeddedassistant.googleapis.com/v1alpha2'
 
+def setContinueFlag(speech_str):
+    global assistant
+    global continue_flag
+    global timeout_count
+
+    print('> setContineFlag(', speech_str, ') ', end='')
+    continue_flag = True
+
+    for w in endword:
+        if w[0] in speech_str:
+            print(w[0], ' ', end='')
+            continue_flag = False
+            timeout_count = 0
+            if not w[1]:
+                assistant.stop_conversation()
+    print(continue_flag)
+
+def turnEnd():
+    global assistant
+    global continue_flag
+
+    print('> turnEnd() continue_flag=', continue_flag)
+    if continue_flag:
+        assistant.start_conversation()
+    else:
+        continue_flag = True
+        timeout_count = 0
+        play_ack(0)
+        print()
+
+    # マイクが自然にミュートになってしまった場合に解除する
+    cmd = ['amixer', 'sset', 'Mic', 'toggle']
+    proc = subprocess.call(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
+    proc = subprocess.call(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
+    
 def procButton(pin):
     global assistant
+    global continue_flag
+    global timeout_count
 
     if pin == PIN_BUTTON:
+            continue_flag = True
+            timeout_count = 0
             assistant.start_conversation()
     print()
 
@@ -78,6 +138,8 @@
 
 def process_event(event, device_id):
     global assistant
+    global continue_flag
+    global timeout_count
 
     """Pretty prints events.
 
@@ -110,16 +172,21 @@
             if '消して' in speech_str:
                 GPIO.output(PIN_LED, GPIO.LOW)
                 assistant.stop_conversation()
+        setContinueFlag(speech_str)
 
     if event.type == EventType.ON_CONVERSATION_TURN_TIMEOUT:
-        play_ack(0)
+        timeout_count += 1
+        if timeout_count >= 2:
+            timeout_count = 0
+            continue_flag = False
+        turnEnd()
 
     if event.type == EventType.ON_NO_RESPONSE:
-        play_ack(0)
+        turnEnd()
 
     if (event.type == EventType.ON_CONVERSATION_TURN_FINISHED and
             event.args and not event.args['with_follow_on_turn']):
-        play_ack(0)
+        turnEnd()
 
     if event.type == EventType.ON_DEVICE_ACTION:
         for command, params in process_device_actions(event, device_id):
