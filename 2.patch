--- FabLabKannai-GoogleAssistant-1.py	2018-02-24 00:45:32.289040393 +0900
+++ FabLabKannai-GoogleAssistant-2.py	2018-02-24 00:55:30.219676079 +0900
@@ -29,6 +29,7 @@
 from google.assistant.library.file_helpers import existing_file
 
 import subprocess
+import RPi.GPIO as GPIO
 
 SOUND_DIR = '/home/pi/sound'
 SOUND_ACK = [
@@ -38,6 +39,8 @@
 
 proc = None
 
+PIN_LED = 17
+
 DEVICE_API_URL = 'https://embeddedassistant.googleapis.com/v1alpha2'
 
 def play_ack(num):
@@ -63,7 +66,10 @@
                                         yield e['command'], None
 
 
+
 def process_event(event, device_id):
+    global assistant
+
     """Pretty prints events.
 
     Prints all events that occur with two spaces between each new
@@ -86,6 +92,16 @@
     if event.type == EventType.ON_END_OF_UTTERANCE:
         play_ack(2)
 
+    if event.type == EventType.ON_RECOGNIZING_SPEECH_FINISHED:
+        speech_str = event.args['text']
+        if '照明' in speech_str:
+            if 'つけて' in speech_str:
+                GPIO.output(PIN_LED, GPIO.HIGH)
+                assistant.stop_conversation()
+            if '消して' in speech_str:
+                GPIO.output(PIN_LED, GPIO.LOW)
+                assistant.stop_conversation()
+
     if event.type == EventType.ON_CONVERSATION_TURN_TIMEOUT:
         play_ack(0)
 
@@ -133,6 +149,11 @@
 
 
 def main():
+    global assistant
+
+    GPIO.setmode(GPIO.BCM)
+    GPIO.setup(PIN_LED, GPIO.OUT)
+
     parser = argparse.ArgumentParser(
         formatter_class=argparse.RawTextHelpFormatter)
     parser.add_argument('--credentials', type=existing_file,
@@ -179,4 +200,8 @@
 
 
 if __name__ == '__main__':
+  try:
     main()
+  finally:
+    print('GPIO.cleanup()')
+    GPIO.cleanup()
